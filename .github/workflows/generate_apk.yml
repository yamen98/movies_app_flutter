
name: Generate apk for QA

on:
  push:
    tags:
      - '*'

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "11.x"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.2'
          channel: "stable"

      - uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - run: flutter clean
      - run: flutter precache
      - run: flutter pub get

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

      - name: Build Android APK
        run: flutter build apk --split-per-abi

      - name: Push APK to Releases
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: |
            ${{ github.workspace }}/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk

